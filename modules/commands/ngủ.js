module.exports.config = {
	name: "ng·ªß",
	version: "1.0.1",
	hasPermssion: 2,
	credits: "ManhG",
	description: "",
	commandCategory: "Other",
	usages: "",
	cooldowns: 0,
	denpendencies: {
		"fs-extra": "",
		"request": ""
	}
};

module.exports.handleEvent = async ({
	event,
	api,
	Users
}) => {
	const fs = global.nodemodule["fs-extra"];
	var {
		threadID,
		messageID,
		body,
		senderID
	} = event;
	const thread = global.data.threadData.get(threadID) || {};
  const moment = require("moment-timezone");
      var gio = moment.tz("Asia/Ho_Chi_Minh").format("HH:mm:s");
const getHours = await global.client.getTime("hours");
			var session = `${getHours < 3 ? "khuya r·ªìi ng·ªß th·∫≠t ngon nh√©üòò" : getHours < 8 ? "s√°ng r·ªìi ng·ªß ng·ªß ho√†iüò°" : getHours < 12 ? "ch√∫c b·∫°n ng·ªß tr∆∞a ngon gi·∫•cü§ó" : getHours < 17 ? "chi·ªÅu ch·∫Øc m·ªát l·∫Øm nh·ªâ ng·ªß t√≠ ƒëiüòù" : getHours < 23 ? "ch√∫c b·∫°n bu·ªïi t·ªëi ng·ªß ngonü§ß" : "khuya r·ªìi ng·ªß th·∫≠t ngon nh√©ü§§"}` 
	if (typeof thread["ng·ªß"] !== "undefined" && thread["ng·ªß"] == false) return;

	let name = await Users.getNameUser(event.senderID);
	if (senderID == api.getCurrentUserID()) return;

	function out(data) {
		api.sendMessage(data, threadID, messageID)
	}
	//tr·∫£ l·ªùi
	var msg = {
		body: `üíòb√°i bai c·∫≠u ${name}üíñ\nB√¢y gi·ªù l√† ${gio}\n${session}`,
		attachment: (await global.nodemodule["axios"]({
			url: (await global.nodemodule["axios"]('https://hutao.feedheavens.repl.co')).data.data,
			method: "GET",
			responseType: "stream"
		})).data
	}
	// G·ªçi bot
	var arr = ["ng·ªß", "b√°i bai", "bai", "t·∫°m bi·ªát", "bye", "goodbye", "h·∫πn g·∫∑p l·∫°i", "ng·ªß ngon", "ƒëi ng·ªß"];
	arr.forEach(i => {
		let str = i[0].toUpperCase() + i.slice(1);
		if (body === i.toUpperCase() | body === i | str === body) return out(msg)
	});
};

module.exports.languages = {
	"vi": {
		"on": "B·∫≠t",
		"off": "T·∫Øt",
		"successText": "ng·ªß th√†nh c√¥ng",
	},
	"en": {
		"on": "on",
		"off": "off",
		"successText": "ng·ªß success!",
	}
}

module.exports.run = async function({
	api,
	event,
	Threads,
	getText
}) {
	const {
		threadID,
		messageID
	} = event;
	let data = (await Threads.getData(threadID)).data;

	if (typeof data["ng·ªß"] == "undefined" || data["ng·ªß"] == true) data["ng·ªß"] = false;
	else data["ng·ªß"] = true;

	await Threads.setData(threadID, {
		data
	});
	global.data.threadData.set(threadID, data);
	return api.sendMessage(`${(data["ng·ªß"] == false) ? getText("off") : getText("on")} ${getText("successText")}`, threadID, messageID);
      }